org: ipj31
app: cloud-note
service: cloud-note

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  stage: v1
  region: us-west-1
  httpApi:
    cors: true
    authorizers:
      jwtAuth:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.${self:provider.region}.amazonaws.com/us-west-1_8ZRLJsPlM
        audience:
          - 3b7j4ldaj1b8n52ge2u6uqrenp
  iam:
    role:
      statements:
        - Effect: Allow
          Action: 
            - dynamodb:*
          Resource: "*"

package:
  individually: true
  patterns:
    - "!cloud-note-ui/**"
    - "!.serverless/**"
    - "!lambdas/**"

functions:
  create-note:
    name: create-note
    handler: lambdas/create.handler
    package:
      patterns:
        - "lambdas/create.py"
    events:
      - httpApi:
          method: POST
          path: /${sls:stage}/note/{noteId}
          authorizer: 
            name: jwtAuth
  read-notes:
    name: read-notes
    handler: lambdas/read.handler
    package:
      patterns:
        - "lambdas/read.py"
    events:
      - httpApi:
          method: GET
          path: /${sls:stage}/note
          authorizer: 
            name: jwtAuth
  delete-note:
    name: delete-note
    handler: lambdas/delete.handler
    package:
      patterns:
        - "lambdas/delete.py"
    events:
      - httpApi:
          method: DELETE
          path: /${sls:stage}/note/{noteId}
          authorizer: 
            name: jwtAuth

resources:
  Resources:
    # Notes Table
    NotesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: notes-${sls:stage}
        AttributeDefinitions:
          - AttributeName: noteId
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: noteId
            KeyType: HASH
          - AttributeName: email
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: emailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
    # User pool
    UsersCognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UsernameAttributes:
          - email
          - phone_number
        AutoVerifiedAttributes:
          - email
    # User pool client
    UsersCognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId:
          Ref: UsersCognitoUserPool
  
  Outputs:
    UserPool:
      Value:
        Ref: UsersCognitoUserPool
    UserPoolClient:
      Value:
        Ref: UsersCognitoUserPoolClient